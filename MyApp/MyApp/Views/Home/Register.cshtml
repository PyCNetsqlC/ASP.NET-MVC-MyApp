@model MyApp.Models.RegisterViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <style>
        /* 設置整個頁面的背景為藍白色漸層 */
        html, body {
            background: linear-gradient(#6A5ACD, #ADD8E6); /* 從左到右的漸層顏色 */
            display: flex; /* 使用Flexbox佈局 */
            justify-content: center; /* 水平居中 */
            align-items: center; /* 垂直居中 */
            height: 100%; /* 設置高度為100%的視口高度 */
            margin: 0; /* 移除默認的頁面外邊距 */
            font-family: Arial, sans-serif; /* 設置字體 */
        }

        /* 登錄表單的容器樣式 */
        .register-form {
            background: #fff; /* 背景顏色為白色 */
            padding: 20px; /* 內邊距為20px */
            border-radius: 10px; /* 圓角邊框 */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* 添加陰影效果 */
            width: 100%; /* 寬度100% */
            max-width: 400px; /* 最大寬度為400px */
            text-align: center; /* 文字居中對齊 */
        }

            /* 每個表單項目的容器樣式 */
            .register-form div {
                margin-bottom: 5px; /* 下方外邊距為15px */
            }

            /* 標籤的樣式 */
            .register-form label {
                display: block; /* 塊級元素顯示 */
                margin-bottom: 5px; /* 下方外邊距為5px */
                font-weight: bold; /* 粗體字 */
                text-align: left; /* 文字左對齊 */
            }

            /* 輸入框的樣式 */
            .register-form input[type="text"]
            .register-form input[type="password"] 
            .register-form input[type="password"]
            .register-form input[type="text"] {
                width: 100%; /* 寬度100% */
                padding: 10px; /* 內邊距為10px */
                border: 1px solid #ccc; /* 灰色邊框 */
                border-radius: 5px; /* 圓角邊框 */
                margin-bottom: 3px; /* 下方外邊距為5px */
                box-sizing: border-box; /* 包括內邊距和邊框在內計算寬度 */
            }

            /* 登錄按鈕的樣式 */
            .register-form button {
                width: 100%; /* 寬度100% */
                padding: 10px; /* 內邊距為10px */
                border: none; /* 無邊框 */
                border-radius: 5px; /* 圓角邊框 */
                background-color: #6A5ACD; /* 背景顏色 */
                color: white; /* 文字顏色 */
                font-size: 16px; /* 字體大小 */
                cursor: pointer; /* 滑鼠指針樣式 */
                margin-top: 4px; /* 上方外邊距為5px */
            }

                /* 登錄按鈕的懸停效果 */
                .register-form button:hover {
                    background-color: #5A4CBD; /* 懸停時的背景顏色 */
                }

    </style>
</head>

<body>
    <div class="register-form">

        <h2>Register</h2>

        <form asp-action="Register" method="post">

                <div>
                    <label asp-for="Username">Username: </label>
                    <input asp-for="Username" type="text" placeholder="Enter your username" />
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>

                <div>
                    <label asp-for="Password">Password: </label>
                    <input asp-for="Password" type="password" placeholder="Enter your password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div>
                    <label asp-for="ConfirmPassword">Confirm Password: </label>
                    <input asp-for="ConfirmPassword" type="password" placeholder="Check your password" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <div>
                    <label asp-for="Email">Email: </label>
                    <input asp-for="Email" type="email" placeholder="Enter your email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                @if (ViewData.ModelState.Count > 0)
                {
                    //string mm = "";
                    /*foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {

                        //@ViewData[$"{modelError.ErrorMessage}"]
                        //@ViewData["ErrorMessage"]
                        //mm = @modelError.ErrorMessage;
                        <div class="alert alert-danger">
                            @ViewData["ErrorMessage"]
                        <!--<p style="color:red">ViewData["ErrorMessage"]</p>-->
                        </div>
                    
                    }*/
                    <div class="alert alert-danger">
                        @ViewData["ErrorMessage"]
                        <!--<p style="color:red">ViewData["ErrorMessage"]</p>-->
                    </div>
                }

                <button type="submit">Register</button>
         </form>
    </div>

</body>
</html>